package com.joyable.mock

import io.ktor.client.HttpClient
import io.ktor.client.features.json.JsonFeature
import io.ktor.client.features.logging.DEFAULT
import io.ktor.client.features.logging.LogLevel
import io.ktor.client.features.logging.Logger
import io.ktor.client.features.logging.Logging
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.post
import io.ktor.http.takeFrom


class WireMockAdminGateway(val baseUrl: String) {

    companion object {
        const val MAPPING_PATH = "__admin/mapping"
    }

    suspend fun postMapping(mapping: WireMockMapping): Response {
        val response: Response = client.post<Response> {
            apiUrl(MAPPING_PATH)
        }
        return response
    }

    private val client by lazy {
        HttpClient {
            install(JsonFeature) {

            }
            install(Logging) {
                logger = Logger.DEFAULT
                level = LogLevel.ALL
            }
        }
    }

    private fun HttpRequestBuilder.apiUrl(path: String) {
        url {
            takeFrom(baseUrl)
            encodedPath = path
        }
    }
}
